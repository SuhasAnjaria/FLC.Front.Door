<extra:Window
    x:Class="flc.FrontDoor.Views.ChartingTool" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:extra="http://schemas.extra.com/ui" 
    xmlns:params="http://schemas.codeplex.com/elysium/params" 
    xmlns:metro="http://schemas.codeplex.com/elysium" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:viewsmodels="clr-namespace:flc.FrontDoor.ViewModels"
    xmlns:assets="clr-namespace:flc.FrontDoor.Assets"
    xmlns:sciChart="http://schemas.abtsoftware.co.uk/scichart"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    Title="FLC Charts"
    Icon="{StaticResource Flc Icon}"
    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
    WindowStartupLocation="CenterScreen"
    TaskbarOverlayTemplate="{StaticResource WindowOverlayTemplate}"
    mc:Ignorable="d" 
    Height="1000" 
    Width="1300">
    <extra:Window.Resources>


        <Style x:Key="GlobalAxisStyle" TargetType="sciChart:AxisBase">
            <Setter Property="VisibleRange" Value="{Binding VisibleRange, Mode=OneWay}"></Setter>
            <Setter Property="AxisTitle" Value="{Binding Title, Mode=TwoWay}"></Setter>
            <Setter Property="Id" Value="{Binding Id}"/>
            <Setter Property="GrowBy" Value="0.1,0.1"/>
            <Setter Property="AutoRange" Value="{Binding AutoRange,Mode=OneWay}"></Setter>
            <Setter Property="AxisAlignment" Value="{Binding AxisAlignment, Mode=TwoWay, NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged}"></Setter>
            <Setter Property="DrawMajorGridLines" Value="False"/>
        </Style>
        <Style TargetType="sciChart:TextAnnotation">
            <Style.Setters>
                <Setter Property="Foreground" Value="#B31B8532"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="CoordinateMode" Value="Relative"/>
                <Setter Property="X1" Value="0.5"/>
                <Setter Property="Y1" Value="0.5"/>
                <Setter Property="Opacity" Value="0.8"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
               <Setter Property="Text" Value="Click To Edit"/>
            </Style.Setters>
            </Style>
        <Style TargetType="sciChart:LineArrowAnnotation">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HeadWidth" Value="2"/>
            <Setter Property="HeadLength" Value="2"/>
            <Setter Property="Stroke" Value="#5757CC"/>
            <Setter Property="StrokeThickness" Value="2"/>
            <Setter Property="CoordinateMode" Value="Relative"/>
            <Setter Property="X1" Value="0.5"/>
            <Setter Property="X2" Value="0.6"/>
            <Setter Property="Y1" Value="0.5"/>
            <Setter Property="Y2" Value="0.3"/>
            
            <Setter Property="IsSelected" Value="True"/>
            <Setter Property="Foreground" Value="Blue"/>            
        </Style>
        <Style TargetType="sciChart:BoxAnnotation">
            <Setter Property="Height" Value="4"/>
            <Setter Property="Width" Value="4"/>
            <Setter Property="Background" Value="#A8C5A6"/>
            <Setter Property="CornerRadius" Value="2"/>
            <Setter Property="CoordinateMode" Value="Relative"/>
            <Setter Property="X1" Value="0.5"/>
            <Setter Property="Y1" Value="0.5"/>
            <Setter Property="Y2" Value="0.4"/>
            <Setter Property="X2" Value="0.4"/>
            <Setter Property="Opacity" Value="0.5"/>
            <Setter Property="IsSelected" Value="True"/>
        </Style>
        <Style TargetType="sciChart:HorizontalLineAnnotation">
            <Setter Property="CoordinateMode" Value="Relative"/>
            <Setter Property="X1" Value="0.5"/>
            <Setter Property="Y1" Value="0.5"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="IsEditable" Value="True"/>
            <Setter  Property="Width" Value="2"/>
            <Setter Property="Stroke" Value="#F6617F"/>
            <Setter Property="LabelPlacement" Value="Axis"/>
            <Setter Property="ShowLabel" Value="True"/>
            <Setter Property="Opacity" Value="0.7"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Name, RelativeSource={RelativeSource Self}}" Value="HorizontalLineAnnotation" >
                    <Setter Property="LabelValue" Value="Click To Edit"/>
                    <Setter Property="LabelPlacement" Value="TopLeft"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="CanEditText" Value="True"/>
                    <Setter Property="IsEditable" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="sciChart:VerticalLineAnnotation">
            <Setter Property="CoordinateMode" Value="Relative"/>
            <Setter Property="X1" Value="0.5"/>
            <Setter Property="Y1" Value="0.5"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="IsEditable" Value="True"/>
            <Setter  Property="Width" Value="2"/>
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="Stroke" Value="Crimson"/>
            <Setter Property="LabelPlacement" Value="Auto"/>
            <Setter Property="ShowLabel" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Name, RelativeSource={RelativeSource Self}}" Value="VerticalMarkerAnnotation" >
                <Setter Property="LabelValue" Value="Click To Edit"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Stroke" Value="BlueViolet"/>
                <Setter Property="CanEditText" Value="True"/>
                    <Setter Property="IsSelected" Value="True"/>
                    <Setter Property="IsEditable" Value="True"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Name="SelectedSeriesStyle" TargetType="sciChart:BaseRenderableSeries">
            <Setter Property="SeriesColor" Value="Black"/>
            <Setter Property="PointMarkerTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <sciChart:EllipsePointMarker Fill="Black" Stroke="Black"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    </extra:Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="67"/>
            <RowDefinition Height="Auto" MinHeight="747"/>
        </Grid.RowDefinitions>
        <Separator Grid.Row="1" Margin="6,6,6,0" VerticalAlignment="Top" Panel.ZIndex="2" Opacity="0.5" Height="1"/>
        <extra:AnimatedWrapPanel Grid.Row="1">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File" Width="49" HorizontalContentAlignment="Center" FontStretch="Expanded"  FontSize="14">
                    <MenuItem Style="{StaticResource ExportMenuItemStyle}">
                        <MenuItem Style="{StaticResource ExportCsvMenuItemStyle}"/>
                        <MenuItem Style="{StaticResource PdfMenuItemStyle}"/>
                    </MenuItem>
                    <MenuItem Style="{StaticResource SaveMenuItemStyle}">
                        <MenuItem Style="{StaticResource SaveMenuItemStyle}"/>
                        <MenuItem Style="{StaticResource SaveAsMenuItemStyle}"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Edit" Width="49" HorizontalContentAlignment="Center" FontStretch="Expanded"  FontSize="14">
                    <MenuItem Style="{StaticResource SettingsMenuItemStyle}"/>
                </MenuItem>
                <MenuItem Header="_Help" Width="49" HorizontalContentAlignment="Center" FontStretch="Expanded"  FontSize="14">
                    <MenuItem Style="{StaticResource HelpMenuItemStyle}"/>
                    <MenuItem Header="Update" />
                </MenuItem>
            </Menu>
        </extra:AnimatedWrapPanel>
        <!-- Top Toolbar -->
        <Grid Background="{StaticResource SemitransparentContrastBrush}" VerticalAlignment="Center"  Grid.Row="2" HorizontalAlignment="Center" MinWidth="800">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"  Grid.Column="0">

                    <metro:CommandButton 
                    Style="{StaticResource TimeSeriesCommandButtonStyle}" Tag ="TimeSeries" 
                        Command="{Binding ChartIndicatorChangedCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                   />
                    <metro:CommandButton 
                    Style="{StaticResource CurveCommandButtonStyle}" Click="ButtonBase2_OnClick" Tag="Curve" Command="{Binding ChartIndicatorChangedCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                    <WrapPanel  Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Left,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}">
                        <TextBlock 
                        Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Left,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}" 
                        Text="{Binding Path=SeriesName, TargetNullValue='SelectedSeries', FallbackValue='Selected Series', UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                        Style="{StaticResource NormalTextStyle}" VerticalAlignment="Center"/>

                        <DatePicker 
                        Style="{StaticResource TransparentDatePickerStyle}" 
                        SelectedDateFormat="Short" 
                        Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Bottom,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}" 
                        ToolTip="Start Date" 
                        SelectedDate="{Binding FromDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <DatePicker 
                        Style="{StaticResource TransparentDatePickerStyle}" 
                        Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Bottom,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}" 
                        SelectedDateFormat="Short" 
                        ToolTip="End Date" DisplayDateEnd="{x:Static system:DateTime.Today}" IsEnabled="{Binding ChartIndicator, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ChartTypeToBoolConverter}}"
                        SelectedDate="{Binding ToDate, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                            
                            </DatePicker>
                        <metro:CommandButton Style="{StaticResource SubmitCommandButtonStyle}" x:Name="SubmitButton"
                            Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Bottom,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}"
                                             Tag="{Binding ChartIndicator, UpdateSourceTrigger=PropertyChanged}"
                                             Command="{Binding GetChartCommand}"/>
                        
                        
                        <Rectangle VerticalAlignment="Stretch" Fill="#908F8F" Width="1" Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Bottom,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}"/>
                    </WrapPanel>
                    <WrapPanel x:Name="AnnotationCommandPanel">
                        <metro:CommandButton 
                    Style="{StaticResource TextAnnotationButtonStyle}" Tag="TextAnnotation" Command="{Binding Path=AnnotationViewModel.AddAnnotationCommand}" CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Self}}"
                            
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        <metro:CommandButton 
                    Style="{StaticResource ArrowAnnotationButtonStyle}" Tag="ArrowAnnotation" Command="{Binding Path=AnnotationViewModel.AddAnnotationCommand}" CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                            />
                        <metro:CommandButton 
                    Style="{StaticResource BoxAnnotationButtonStyle}" Tag="BoxAnnotation" Command="{Binding Path=AnnotationViewModel.AddAnnotationCommand}" CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>

                        <metro:CommandButton 
                    Style="{StaticResource HorizontalMarkerAnnotationButtonStyle}" Tag="HorizontalLineAnnotation" 
                            Command="{Binding Path=AnnotationViewModel.AddAnnotationCommand}" CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        <metro:CommandButton 
                    Style="{StaticResource VerticalMarkerAnnotationButtonStyle}" Tag="VerticalMarkerAnnotation"
                            Command="{Binding Path=AnnotationViewModel.AddAnnotationCommand}" CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        <metro:CommandButton 
                    Style="{StaticResource HorizontalThresholdAnnotationButtonStyle}" Tag="HorizontalThreshold"
                            Command="{Binding Path=AnnotationViewModel.AddAnnotationCommand}" CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        <metro:CommandButton 
                    Style="{StaticResource VerticalThresholdAnnotationButtonStyle}" Tag="VerticalThreshold"
                            Command="{Binding Path=AnnotationViewModel.AddAnnotationCommand}" CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Self}}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        <metro:CommandButton 
                    Style="{StaticResource DeleteButtonStyle}" x:Name="DeleteButton" 
                            Command="{Binding Path=AnnotationViewModel.DeleteAnnotationCommand}"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        <Rectangle VerticalAlignment="Stretch" Fill="#908F8F" Width="1" Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Bottom,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}"/>
                    </WrapPanel>
                    <WrapPanel x:Name="ActionCommandPanel">
                        <metro:CommandButton 
                    Style="{StaticResource ImageExportButtonStyle}" Click="SaveChartToFile"
                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                      <metro:CommandButton
                          Style="{StaticResource ImageCopyButtonStyle}"
                          Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                          Click="CopySurfaceToClipboard"/> 
                    </WrapPanel>
                </StackPanel>
            </Grid>
        </Grid>
        
        <!-- Chart Surfaces -->
        <Grid Grid.Row="3" x:Name="PART_ChartPresenter" VerticalAlignment="Stretch" Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" PreviewMouseDown="UIElement_OnPreviewMouseDown">
            <Grid.RowDefinitions >
                <RowDefinition Height="10"/>
                <RowDefinition Height="{Binding Row1Height}"/>
                <RowDefinition Height="{Binding Row2Height}"/>
                <RowDefinition Height="{Binding Row3Height}"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Column1Width}"/>
                <ColumnDefinition Width="{Binding Column2Width}"/>
            </Grid.ColumnDefinitions>
            <sciChart:SciChartSurface x:Name="TimeSeriesChartSurface1" Grid.Row="1" Grid.Column="0"  HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch" DataContext="{Binding Ts1ViewModel}"
                                      sciChart:ThemeManager.Theme="BrightSpark" Annotations="{Binding AnnotationViewModel.ChartAnnotations}" 
                                      Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Left,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}" 
                                      HorizontalAlignment="Stretch"  VerticalContentAlignment="Stretch"
                                      assets:YAxesCollectionBehaviour.AxisSource="{Binding YAxisCollection}"
                                      assets:YAxesCollectionBehaviour.AxisStyle="{StaticResource GlobalAxisStyle}"
                                      assets:Injector.PassSurfaceToViewModel="True"
                                       SeriesSource="{Binding ChartSeries}"  >
                <sciChart:SciChartSurface.XAxis>
                    <sciChart:NumericAxis DrawMajorGridLines="False" DrawMajorBands="False" DrawMinorGridLines="False" >

                    </sciChart:NumericAxis>
                </sciChart:SciChartSurface.XAxis>
                
                <sciChart:SciChartSurface.ChartModifier>    
                    <sciChart:ModifierGroup>
                        <sciChart:RubberBandXyZoomModifier></sciChart:RubberBandXyZoomModifier>
                        <sciChart:ZoomExtentsModifier ExecuteOn="MouseDoubleClick"></sciChart:ZoomExtentsModifier>
                        <sciChart:SeriesSelectionModifier SelectedSeriesStyle="{StaticResource SelectedSeriesStyle}"/>
                </sciChart:ModifierGroup>
                </sciChart:SciChartSurface.ChartModifier>


            </sciChart:SciChartSurface>
            <sciChart:SciChartSurface x:Name="CurveChartSurface1" Grid.Row="2" Grid.Column="0" DataContext="{Binding Cu1ViewModel}" sciChart:ThemeManager.Theme="BrightSpark" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch"
                                      Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Left,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}" 
                                     assets:YAxesCollectionBehaviour.AxisSource="{Binding YAxisCollection}"
                                      assets:YAxesCollectionBehaviour.AxisStyle="{StaticResource GlobalAxisStyle}" Annotations="{Binding AnnotationViewModel.ChartAnnotations}"
                                       SeriesSource="{Binding ChartSeries}" assets:Injector.PassSurfaceToViewModel="True">
                <sciChart:SciChartSurface.XAxis>
                    <sciChart:NumericAxis  LabelProvider="{Binding CurveLabels}" MajorDelta="2" MinorDelta="1" DrawMajorGridLines="False" />
                </sciChart:SciChartSurface.XAxis>
                <sciChart:SciChartSurface.ChartModifier>
                    <sciChart:ModifierGroup>
                        <sciChart:RolloverModifier/>
                        <sciChart:ZoomExtentsModifier ExecuteOn="MouseDoubleClick"/>
                      
                        </sciChart:ModifierGroup>
                    </sciChart:SciChartSurface.ChartModifier>

            </sciChart:SciChartSurface>
            <sciChart:SciChartSurface x:Name="SS" Grid.Row="1" Grid.Column="1" 
                                      sciChart:ThemeManager.Theme="BrightSpark"  
                                      Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Left,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}" 
                                      HorizontalAlignment="Stretch" ViewportManager="{Binding ViewportManager}"
                                       SeriesSource="{Binding Ts1ViewModel.ChartSeriesd}" Visibility="Collapsed" />
            <sciChart:SciChartSurface x:Name="TimeSerie" Grid.Row="2" Grid.Column="1" 
                                      sciChart:ThemeManager.Theme="BrightSpark"  
                                      Margin="{Binding Converter={StaticResource DoubleToThicknessConverter},ConverterParameter='Top,Left,Right', RelativeSource={RelativeSource Self},Path=(params:General.BoldPaddingValue),Mode=OneWay}" 
                                      HorizontalAlignment="Stretch" ViewportManager="{Binding ViewportManager}"
                                       SeriesSource="{Binding Ts1ViewModel.ChartSeries}" Visibility="Collapsed" />
                
                    <TabControl Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" >
                <TabItem Header="TimeSeries"/>
                <TabItem Header="Curve"/>
                <TabItem Header="Data"/>
                <TabItem Header="Regression"/>
            </TabControl>
        </Grid>

    </Grid>
</extra:Window>
